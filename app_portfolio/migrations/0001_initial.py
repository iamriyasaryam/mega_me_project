# Generated by Django 5.1.7 on 2025-04-02 10:44

import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('current', 'Currently Working'), ('left', 'Left'), ('new', 'Started New')], default='new', help_text='Current status of the job.', max_length=10)),
                ('start_date', models.DateField(help_text='Start date of the experience.')),
                ('end_date', models.DateField(blank=True, help_text='End date of the experience. Leave blank if currently working.', null=True)),
                ('company_name', models.CharField(default='Company Name', help_text='Name of the company or organization.', max_length=255)),
                ('company_logo', models.ImageField(blank=True, help_text='Logo of the company.', null=True, upload_to='company_logos/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('position', models.CharField(default='Employee', help_text='Job title or position held.', max_length=100)),
                ('description', models.TextField(default='No description provided.', help_text='Brief overview of the experience.')),
                ('contributions', models.JSONField(default=list, help_text='List of contributions with details such as icon, title, and description.')),
                ('detailed_blog', tinymce.models.HTMLField(default='', help_text='Detailed narrative of the experience with rich text formatting.')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('GENERAL', 'General'), ('TECHNICAL', 'Technical'), ('PRIVACY', 'Privacy'), ('SECURITY', 'Security')], default='GENERAL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Your Name', max_length=255)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('total_projects', models.PositiveIntegerField(default=0)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('about_me', models.TextField(default='A short description about yourself.')),
                ('titles', models.JSONField(default=list)),
                ('detailed_description', models.TextField(default='A detailed description about yourself.', verbose_name='Detailed Description')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('UI_UX', 'UI-UX Project'), ('FRONTEND', 'Frontend Project'), ('CLI', 'Command Line Interface Project'), ('FULLSTACK', 'Full Stack Project'), ('AI_ML', 'AI-ML Project'), ('BACKEND', 'Backend Project'), ('WEB_APP', 'Web Application Project'), ('CROSS_PLATFORM', 'Cross-Platform App'), ('NATIVE_APP', 'Native App Project'), ('NLP', 'NLP Project'), ('DEEP_LEARNING', 'Deep Learning Project'), ('DATA_SCIENCE', 'Data Science Project'), ('BIG_DATA', 'Big Data Project'), ('CLOUD_APP', 'Cloud Application Project')], max_length=20)),
                ('completion_date', models.DateField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('tags', models.CharField(help_text='Enter tags separated by commas', max_length=255)),
                ('details', tinymce.models.HTMLField()),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the project was created.')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='skill_icons/')),
                ('progress_level', models.CharField(choices=[('LEARNING', 'Learning'), ('AVERAGE', 'Average'), ('PROGRESS', 'Progressing'), ('DONE', 'Done'), ('EXPERT', 'Expert')], default='LEARNING', max_length=10)),
                ('progress', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(default='No Description Provided')),
                ('certificate', models.FileField(blank=True, help_text='Upload PDF, DOCX, or an image as a certificate.', null=True, upload_to='skill_certificates/')),
            ],
        ),
        migrations.CreateModel(
            name='ExperienceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Images related to the experience.', upload_to='experience_images/')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app_portfolio.experience')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(help_text="FontAwesome icon class (e.g., 'fas fa-robot')", max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='app_portfolio.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='project_images/')),
                ('is_hero', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app_portfolio.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='skills',
            field=models.ManyToManyField(to='app_portfolio.skill'),
        ),
        migrations.AddField(
            model_name='experience',
            name='skills',
            field=models.ManyToManyField(blank=True, help_text='Skills utilized during this experience.', related_name='experiences', to='app_portfolio.skill'),
        ),
        migrations.CreateModel(
            name='SkillResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(choices=[('IMAGE', 'Image'), ('PDF', 'PDF'), ('DOCX', 'DOCX'), ('VIDEO', 'YouTube Video'), ('LINK', 'External Link')], max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='skill_resources/')),
                ('link', models.URLField(blank=True, help_text='For external links or YouTube videos.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the resource was created.')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='app_portfolio.skill')),
            ],
        ),
    ]
